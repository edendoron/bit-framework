/*
 * bit-indexer
 *
 * This protocol defines the API for **indexer** service in the **BIT** functionality.
 *
 * API version: 1.0.1
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package bitIndexer

import (
	. "../apiResponseHandlers"
	. "../models"
	"encoding/json"
	"errors"
	"io/ioutil"
	"net/http"
	"os"
)

func PostReport(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	reports, request := ReportBody{}, ReportBody{}

	err := json.NewDecoder(r.Body).Decode(&request)
	if err != nil {
		ErrorHandler(w, "Internal server error", err)
	}

	content, err := ioutil.ReadFile("storage/testReport.json")
	if err != nil {
		if errors.Is(err, os.ErrNotExist) {
			input, e := json.MarshalIndent(request, "", " ")
			if e != nil {
				ErrorHandler(w, "Bad request", e)
			}
			e = ioutil.WriteFile("storage/testReport.json", input, 0644)
			if e != nil {
				ErrorHandler(w, "Internal server error", e)
			}
			ResponseHandler(w, "Report posted!")
			return
		}
		ErrorHandler(w, "Internal server error", err)
	}

	// converting existing data to ReportBody type
	err = json.Unmarshal(content, &reports)
	if err != nil || !ValidateType(reports) {
		ErrorHandler(w, "Internal server error", err)
	}
	// append new reports
	reports.Reports = append(reports.Reports, request.Reports...)
	// Marshal it and write back to file
	input, err := json.MarshalIndent(reports, "", " ")
	if err != nil {
		ErrorHandler(w, "Internal server error", err)
	}
	err = ioutil.WriteFile("storage/testReport.json", input, 0644)
	if err != nil {
		ErrorHandler(w, "Internal server error", err)
	}
	ResponseHandler(w, "Report posted!")
}
