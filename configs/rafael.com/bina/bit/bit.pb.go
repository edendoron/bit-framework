// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: bit.proto

package bit

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	"google.golang.org/protobuf/reflect/protoreflect"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

///////////////////////////////////////////////////////////////////////////////
//  Enums
///////////////////////////////////////////////////////////////////////////////
type ESeverity int32

const (
	ESeverity_MINOR    ESeverity = 0
	ESeverity_DEGRADED ESeverity = 1
	ESeverity_CRITICAL ESeverity = 2
	ESeverity_SAFETY   ESeverity = 3
)

var ESeverity_name = map[int32]string{
	0: "MINOR",
	1: "DEGRADED",
	2: "CRITICAL",
	3: "SAFETY",
}

var ESeverity_value = map[string]int32{
	"MINOR":    0,
	"DEGRADED": 1,
	"CRITICAL": 2,
	"SAFETY":   3,
}

func (x ESeverity) String() string {
	return proto.EnumName(ESeverity_name, int32(x))
}

func (ESeverity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_159c218d0eccbf50, []int{0}
}

type FailureExaminationRule_FailureCriteria_FailureValueCriteria_EThresholdMode int32

const (
	FailureExaminationRule_FailureCriteria_FailureValueCriteria_WITHIN FailureExaminationRule_FailureCriteria_FailureValueCriteria_EThresholdMode = 0
	FailureExaminationRule_FailureCriteria_FailureValueCriteria_OUTOF  FailureExaminationRule_FailureCriteria_FailureValueCriteria_EThresholdMode = 1
)

var FailureExaminationRule_FailureCriteria_FailureValueCriteria_EThresholdMode_name = map[int32]string{
	0: "WITHIN",
	1: "OUTOF",
}

var FailureExaminationRule_FailureCriteria_FailureValueCriteria_EThresholdMode_value = map[string]int32{
	"WITHIN": 0,
	"OUTOF":  1,
}

func (x FailureExaminationRule_FailureCriteria_FailureValueCriteria_EThresholdMode) String() string {
	return proto.EnumName(FailureExaminationRule_FailureCriteria_FailureValueCriteria_EThresholdMode_name, int32(x))
}

func (FailureExaminationRule_FailureCriteria_FailureValueCriteria_EThresholdMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_159c218d0eccbf50, []int{2, 0, 0, 0}
}

type FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding_EExceedingType int32

const (
	FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding_VALUE   FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding_EExceedingType = 0
	FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding_PERCENT FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding_EExceedingType = 1
)

var FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding_EExceedingType_name = map[int32]string{
	0: "VALUE",
	1: "PERCENT",
}

var FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding_EExceedingType_value = map[string]int32{
	"VALUE":   0,
	"PERCENT": 1,
}

func (x FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding_EExceedingType) String() string {
	return proto.EnumName(FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding_EExceedingType_name, int32(x))
}

func (FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding_EExceedingType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_159c218d0eccbf50, []int{2, 0, 0, 0, 0}
}

type FailureExaminationRule_FailureCriteria_FailureTimeCriteria_EWindowType int32

const (
	FailureExaminationRule_FailureCriteria_FailureTimeCriteria_NO_WINDOW FailureExaminationRule_FailureCriteria_FailureTimeCriteria_EWindowType = 0
	FailureExaminationRule_FailureCriteria_FailureTimeCriteria_SLIDING   FailureExaminationRule_FailureCriteria_FailureTimeCriteria_EWindowType = 1
)

var FailureExaminationRule_FailureCriteria_FailureTimeCriteria_EWindowType_name = map[int32]string{
	0: "NO_WINDOW",
	1: "SLIDING",
}

var FailureExaminationRule_FailureCriteria_FailureTimeCriteria_EWindowType_value = map[string]int32{
	"NO_WINDOW": 0,
	"SLIDING":   1,
}

func (x FailureExaminationRule_FailureCriteria_FailureTimeCriteria_EWindowType) String() string {
	return proto.EnumName(FailureExaminationRule_FailureCriteria_FailureTimeCriteria_EWindowType_name, int32(x))
}

func (FailureExaminationRule_FailureCriteria_FailureTimeCriteria_EWindowType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_159c218d0eccbf50, []int{2, 0, 1, 0}
}

type FailureReportDuration_EIndicationLatchType int32

const (
	FailureReportDuration_NO_LATCH          FailureReportDuration_EIndicationLatchType = 0
	FailureReportDuration_LATCH_UNTIL_RESET FailureReportDuration_EIndicationLatchType = 1
	FailureReportDuration_LATCH_FOREVER     FailureReportDuration_EIndicationLatchType = 2
	FailureReportDuration_NUM_OF_SECONDS    FailureReportDuration_EIndicationLatchType = 3
)

var FailureReportDuration_EIndicationLatchType_name = map[int32]string{
	0: "NO_LATCH",
	1: "LATCH_UNTIL_RESET",
	2: "LATCH_FOREVER",
	3: "NUM_OF_SECONDS",
}

var FailureReportDuration_EIndicationLatchType_value = map[string]int32{
	"NO_LATCH":          0,
	"LATCH_UNTIL_RESET": 1,
	"LATCH_FOREVER":     2,
	"NUM_OF_SECONDS":    3,
}

func (x FailureReportDuration_EIndicationLatchType) String() string {
	return proto.EnumName(FailureReportDuration_EIndicationLatchType_name, int32(x))
}

func (FailureReportDuration_EIndicationLatchType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_159c218d0eccbf50, []int{3, 0}
}

///////////////////////////////////////////////////////////////////////////////
// General structures
///////////////////////////////////////////////////////////////////////////////
type KeyValuePair struct {
	// base64 encoded value
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// base64 encoded value
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValuePair) Reset()         { *m = KeyValuePair{} }
func (m *KeyValuePair) String() string { return proto.CompactTextString(m) }
func (*KeyValuePair) ProtoMessage()    {}
func (*KeyValuePair) Descriptor() ([]byte, []int) {
	return fileDescriptor_159c218d0eccbf50, []int{0}
}
func (m *KeyValuePair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValuePair.Unmarshal(m, b)
}
func (m *KeyValuePair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValuePair.Marshal(b, m, deterministic)
}
func (m *KeyValuePair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValuePair.Merge(m, src)
}
func (m *KeyValuePair) XXX_Size() int {
	return xxx_messageInfo_KeyValuePair.Size(m)
}
func (m *KeyValuePair) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValuePair.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValuePair proto.InternalMessageInfo

func (m *KeyValuePair) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KeyValuePair) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

//---- general failure description ------
type FailureDescription struct {
	UnitName        string    `protobuf:"bytes,1,opt,name=unit_name,json=unitName,proto3" json:"unit_name,omitempty"`
	TestName        string    `protobuf:"bytes,2,opt,name=test_name,json=testName,proto3" json:"test_name,omitempty"`
	TestId          uint64    `protobuf:"varint,3,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	BitType         []string  `protobuf:"bytes,4,rep,name=bit_type,json=bitType,proto3" json:"bit_type,omitempty"`
	Description     string    `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	AdditionalInfo  string    `protobuf:"bytes,6,opt,name=additional_info,json=additionalInfo,proto3" json:"additional_info,omitempty"`
	Purpose         string    `protobuf:"bytes,7,opt,name=purpose,proto3" json:"purpose,omitempty"`
	Severity        ESeverity `protobuf:"varint,8,opt,name=severity,proto3,enum=bit.ESeverity" json:"severity,omitempty"`
	OperatorFailure []string  `protobuf:"bytes,10,rep,name=operator_failure,json=operatorFailure,proto3" json:"operator_failure,omitempty"`
	// point of view that are influenced
	// (what I cannot do in the system)
	// in case of failure. e.g. TargetDetection
	LineReplacentUnits   []string `protobuf:"bytes,11,rep,name=line_replacent_units,json=lineReplacentUnits,proto3" json:"line_replacent_units,omitempty"`
	FieldReplacemntUnits []string `protobuf:"bytes,12,rep,name=field_replacemnt_units,json=fieldReplacemntUnits,proto3" json:"field_replacemnt_units,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FailureDescription) Reset()         { *m = FailureDescription{} }
func (m *FailureDescription) String() string { return proto.CompactTextString(m) }
func (*FailureDescription) ProtoMessage()    {}
func (*FailureDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor_159c218d0eccbf50, []int{1}
}
func (m *FailureDescription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FailureDescription.Unmarshal(m, b)
}
func (m *FailureDescription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FailureDescription.Marshal(b, m, deterministic)
}
func (m *FailureDescription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FailureDescription.Merge(m, src)
}
func (m *FailureDescription) XXX_Size() int {
	return xxx_messageInfo_FailureDescription.Size(m)
}
func (m *FailureDescription) XXX_DiscardUnknown() {
	xxx_messageInfo_FailureDescription.DiscardUnknown(m)
}

var xxx_messageInfo_FailureDescription proto.InternalMessageInfo

func (m *FailureDescription) GetUnitName() string {
	if m != nil {
		return m.UnitName
	}
	return ""
}

func (m *FailureDescription) GetTestName() string {
	if m != nil {
		return m.TestName
	}
	return ""
}

func (m *FailureDescription) GetTestId() uint64 {
	if m != nil {
		return m.TestId
	}
	return 0
}

func (m *FailureDescription) GetBitType() []string {
	if m != nil {
		return m.BitType
	}
	return nil
}

func (m *FailureDescription) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *FailureDescription) GetAdditionalInfo() string {
	if m != nil {
		return m.AdditionalInfo
	}
	return ""
}

func (m *FailureDescription) GetPurpose() string {
	if m != nil {
		return m.Purpose
	}
	return ""
}

func (m *FailureDescription) GetSeverity() ESeverity {
	if m != nil {
		return m.Severity
	}
	return ESeverity_MINOR
}

func (m *FailureDescription) GetOperatorFailure() []string {
	if m != nil {
		return m.OperatorFailure
	}
	return nil
}

func (m *FailureDescription) GetLineReplacentUnits() []string {
	if m != nil {
		return m.LineReplacentUnits
	}
	return nil
}

func (m *FailureDescription) GetFieldReplacemntUnits() []string {
	if m != nil {
		return m.FieldReplacemntUnits
	}
	return nil
}

//---- failure examination rule ------
type FailureExaminationRule struct {
	MatchingField        string                                  `protobuf:"bytes,1,opt,name=matching_field,json=matchingField,proto3" json:"matching_field,omitempty"`
	MatchingTag          *KeyValuePair                           `protobuf:"bytes,2,opt,name=matching_tag,json=matchingTag,proto3" json:"matching_tag,omitempty"`
	FailureCriteria      *FailureExaminationRule_FailureCriteria `protobuf:"bytes,3,opt,name=failure_criteria,json=failureCriteria,proto3" json:"failure_criteria,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *FailureExaminationRule) Reset()         { *m = FailureExaminationRule{} }
func (m *FailureExaminationRule) String() string { return proto.CompactTextString(m) }
func (*FailureExaminationRule) ProtoMessage()    {}
func (*FailureExaminationRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_159c218d0eccbf50, []int{2}
}
func (m *FailureExaminationRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FailureExaminationRule.Unmarshal(m, b)
}
func (m *FailureExaminationRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FailureExaminationRule.Marshal(b, m, deterministic)
}
func (m *FailureExaminationRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FailureExaminationRule.Merge(m, src)
}
func (m *FailureExaminationRule) XXX_Size() int {
	return xxx_messageInfo_FailureExaminationRule.Size(m)
}
func (m *FailureExaminationRule) XXX_DiscardUnknown() {
	xxx_messageInfo_FailureExaminationRule.DiscardUnknown(m)
}

var xxx_messageInfo_FailureExaminationRule proto.InternalMessageInfo

func (m *FailureExaminationRule) GetMatchingField() string {
	if m != nil {
		return m.MatchingField
	}
	return ""
}

func (m *FailureExaminationRule) GetMatchingTag() *KeyValuePair {
	if m != nil {
		return m.MatchingTag
	}
	return nil
}

func (m *FailureExaminationRule) GetFailureCriteria() *FailureExaminationRule_FailureCriteria {
	if m != nil {
		return m.FailureCriteria
	}
	return nil
}

type FailureExaminationRule_FailureCriteria struct {
	ValueCriteria        *FailureExaminationRule_FailureCriteria_FailureValueCriteria `protobuf:"bytes,1,opt,name=value_criteria,json=valueCriteria,proto3" json:"value_criteria,omitempty"`
	TimeCriteria         *FailureExaminationRule_FailureCriteria_FailureTimeCriteria  `protobuf:"bytes,2,opt,name=time_criteria,json=timeCriteria,proto3" json:"time_criteria,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                     `json:"-"`
	XXX_unrecognized     []byte                                                       `json:"-"`
	XXX_sizecache        int32                                                        `json:"-"`
}

func (m *FailureExaminationRule_FailureCriteria) Reset() {
	*m = FailureExaminationRule_FailureCriteria{}
}
func (m *FailureExaminationRule_FailureCriteria) String() string { return proto.CompactTextString(m) }
func (*FailureExaminationRule_FailureCriteria) ProtoMessage()    {}
func (*FailureExaminationRule_FailureCriteria) Descriptor() ([]byte, []int) {
	return fileDescriptor_159c218d0eccbf50, []int{2, 0}
}
func (m *FailureExaminationRule_FailureCriteria) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FailureExaminationRule_FailureCriteria.Unmarshal(m, b)
}
func (m *FailureExaminationRule_FailureCriteria) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FailureExaminationRule_FailureCriteria.Marshal(b, m, deterministic)
}
func (m *FailureExaminationRule_FailureCriteria) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FailureExaminationRule_FailureCriteria.Merge(m, src)
}
func (m *FailureExaminationRule_FailureCriteria) XXX_Size() int {
	return xxx_messageInfo_FailureExaminationRule_FailureCriteria.Size(m)
}
func (m *FailureExaminationRule_FailureCriteria) XXX_DiscardUnknown() {
	xxx_messageInfo_FailureExaminationRule_FailureCriteria.DiscardUnknown(m)
}

var xxx_messageInfo_FailureExaminationRule_FailureCriteria proto.InternalMessageInfo

func (m *FailureExaminationRule_FailureCriteria) GetValueCriteria() *FailureExaminationRule_FailureCriteria_FailureValueCriteria {
	if m != nil {
		return m.ValueCriteria
	}
	return nil
}

func (m *FailureExaminationRule_FailureCriteria) GetTimeCriteria() *FailureExaminationRule_FailureCriteria_FailureTimeCriteria {
	if m != nil {
		return m.TimeCriteria
	}
	return nil
}

// Value based definition for failure anouncment
type FailureExaminationRule_FailureCriteria_FailureValueCriteria struct {
	Minimum              float64                                                                    `protobuf:"fixed64,1,opt,name=minimum,proto3" json:"minimum,omitempty"`
	Miximum              float64                                                                    `protobuf:"fixed64,2,opt,name=miximum,proto3" json:"miximum,omitempty"`
	ThresholdMode        FailureExaminationRule_FailureCriteria_FailureValueCriteria_EThresholdMode `protobuf:"varint,3,opt,name=threshold_mode,json=thresholdMode,proto3,enum=bit.FailureExaminationRule_FailureCriteria_FailureValueCriteria_EThresholdMode" json:"threshold_mode,omitempty"`
	Exceeding            *FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding     `protobuf:"bytes,4,opt,name=exceeding,proto3" json:"exceeding,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                   `json:"-"`
	XXX_unrecognized     []byte                                                                     `json:"-"`
	XXX_sizecache        int32                                                                      `json:"-"`
}

func (m *FailureExaminationRule_FailureCriteria_FailureValueCriteria) Reset() {
	*m = FailureExaminationRule_FailureCriteria_FailureValueCriteria{}
}
func (m *FailureExaminationRule_FailureCriteria_FailureValueCriteria) String() string {
	return proto.CompactTextString(m)
}
func (*FailureExaminationRule_FailureCriteria_FailureValueCriteria) ProtoMessage() {}
func (*FailureExaminationRule_FailureCriteria_FailureValueCriteria) Descriptor() ([]byte, []int) {
	return fileDescriptor_159c218d0eccbf50, []int{2, 0, 0}
}
func (m *FailureExaminationRule_FailureCriteria_FailureValueCriteria) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FailureExaminationRule_FailureCriteria_FailureValueCriteria.Unmarshal(m, b)
}
func (m *FailureExaminationRule_FailureCriteria_FailureValueCriteria) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FailureExaminationRule_FailureCriteria_FailureValueCriteria.Marshal(b, m, deterministic)
}
func (m *FailureExaminationRule_FailureCriteria_FailureValueCriteria) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FailureExaminationRule_FailureCriteria_FailureValueCriteria.Merge(m, src)
}
func (m *FailureExaminationRule_FailureCriteria_FailureValueCriteria) XXX_Size() int {
	return xxx_messageInfo_FailureExaminationRule_FailureCriteria_FailureValueCriteria.Size(m)
}
func (m *FailureExaminationRule_FailureCriteria_FailureValueCriteria) XXX_DiscardUnknown() {
	xxx_messageInfo_FailureExaminationRule_FailureCriteria_FailureValueCriteria.DiscardUnknown(m)
}

var xxx_messageInfo_FailureExaminationRule_FailureCriteria_FailureValueCriteria proto.InternalMessageInfo

func (m *FailureExaminationRule_FailureCriteria_FailureValueCriteria) GetMinimum() float64 {
	if m != nil {
		return m.Minimum
	}
	return 0
}

func (m *FailureExaminationRule_FailureCriteria_FailureValueCriteria) GetMiximum() float64 {
	if m != nil {
		return m.Miximum
	}
	return 0
}

func (m *FailureExaminationRule_FailureCriteria_FailureValueCriteria) GetThresholdMode() FailureExaminationRule_FailureCriteria_FailureValueCriteria_EThresholdMode {
	if m != nil {
		return m.ThresholdMode
	}
	return FailureExaminationRule_FailureCriteria_FailureValueCriteria_WITHIN
}

func (m *FailureExaminationRule_FailureCriteria_FailureValueCriteria) GetExceeding() *FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding {
	if m != nil {
		return m.Exceeding
	}
	return nil
}

type FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding struct {
	Type                 FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding_EExceedingType `protobuf:"varint,1,opt,name=type,proto3,enum=bit.FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding_EExceedingType" json:"type,omitempty"`
	Value                float64                                                                              `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                             `json:"-"`
	XXX_unrecognized     []byte                                                                               `json:"-"`
	XXX_sizecache        int32                                                                                `json:"-"`
}

func (m *FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding) Reset() {
	*m = FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding{}
}
func (m *FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding) String() string {
	return proto.CompactTextString(m)
}
func (*FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding) ProtoMessage() {}
func (*FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding) Descriptor() ([]byte, []int) {
	return fileDescriptor_159c218d0eccbf50, []int{2, 0, 0, 0}
}
func (m *FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding.Unmarshal(m, b)
}
func (m *FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding.Marshal(b, m, deterministic)
}
func (m *FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding.Merge(m, src)
}
func (m *FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding) XXX_Size() int {
	return xxx_messageInfo_FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding.Size(m)
}
func (m *FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding) XXX_DiscardUnknown() {
	xxx_messageInfo_FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding.DiscardUnknown(m)
}

var xxx_messageInfo_FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding proto.InternalMessageInfo

func (m *FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding) GetType() FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding_EExceedingType {
	if m != nil {
		return m.Type
	}
	return FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding_VALUE
}

func (m *FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// Time based definition for failure anouncment
type FailureExaminationRule_FailureCriteria_FailureTimeCriteria struct {
	WindowType           FailureExaminationRule_FailureCriteria_FailureTimeCriteria_EWindowType `protobuf:"varint,1,opt,name=window_type,json=windowType,proto3,enum=bit.FailureExaminationRule_FailureCriteria_FailureTimeCriteria_EWindowType" json:"window_type,omitempty"`
	WindowSize           uint32                                                                 `protobuf:"varint,2,opt,name=window_size,json=windowSize,proto3" json:"window_size,omitempty"`
	FailuresCCount       uint32                                                                 `protobuf:"varint,3,opt,name=failures_cCount,json=failuresCCount,proto3" json:"failures_cCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                               `json:"-"`
	XXX_unrecognized     []byte                                                                 `json:"-"`
	XXX_sizecache        int32                                                                  `json:"-"`
}

func (m *FailureExaminationRule_FailureCriteria_FailureTimeCriteria) Reset() {
	*m = FailureExaminationRule_FailureCriteria_FailureTimeCriteria{}
}
func (m *FailureExaminationRule_FailureCriteria_FailureTimeCriteria) String() string {
	return proto.CompactTextString(m)
}
func (*FailureExaminationRule_FailureCriteria_FailureTimeCriteria) ProtoMessage() {}
func (*FailureExaminationRule_FailureCriteria_FailureTimeCriteria) Descriptor() ([]byte, []int) {
	return fileDescriptor_159c218d0eccbf50, []int{2, 0, 1}
}
func (m *FailureExaminationRule_FailureCriteria_FailureTimeCriteria) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FailureExaminationRule_FailureCriteria_FailureTimeCriteria.Unmarshal(m, b)
}
func (m *FailureExaminationRule_FailureCriteria_FailureTimeCriteria) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FailureExaminationRule_FailureCriteria_FailureTimeCriteria.Marshal(b, m, deterministic)
}
func (m *FailureExaminationRule_FailureCriteria_FailureTimeCriteria) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FailureExaminationRule_FailureCriteria_FailureTimeCriteria.Merge(m, src)
}
func (m *FailureExaminationRule_FailureCriteria_FailureTimeCriteria) XXX_Size() int {
	return xxx_messageInfo_FailureExaminationRule_FailureCriteria_FailureTimeCriteria.Size(m)
}
func (m *FailureExaminationRule_FailureCriteria_FailureTimeCriteria) XXX_DiscardUnknown() {
	xxx_messageInfo_FailureExaminationRule_FailureCriteria_FailureTimeCriteria.DiscardUnknown(m)
}

var xxx_messageInfo_FailureExaminationRule_FailureCriteria_FailureTimeCriteria proto.InternalMessageInfo

func (m *FailureExaminationRule_FailureCriteria_FailureTimeCriteria) GetWindowType() FailureExaminationRule_FailureCriteria_FailureTimeCriteria_EWindowType {
	if m != nil {
		return m.WindowType
	}
	return FailureExaminationRule_FailureCriteria_FailureTimeCriteria_NO_WINDOW
}

func (m *FailureExaminationRule_FailureCriteria_FailureTimeCriteria) GetWindowSize() uint32 {
	if m != nil {
		return m.WindowSize
	}
	return 0
}

func (m *FailureExaminationRule_FailureCriteria_FailureTimeCriteria) GetFailuresCCount() uint32 {
	if m != nil {
		return m.FailuresCCount
	}
	return 0
}

//---- failure report duration ------
type FailureReportDuration struct {
	Indication           FailureReportDuration_EIndicationLatchType `protobuf:"varint,1,opt,name=indication,proto3,enum=bit.FailureReportDuration_EIndicationLatchType" json:"indication,omitempty"`
	IndicationSeconds    uint32                                     `protobuf:"varint,2,opt,name=indication_seconds,json=indicationSeconds,proto3" json:"indication_seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *FailureReportDuration) Reset()         { *m = FailureReportDuration{} }
func (m *FailureReportDuration) String() string { return proto.CompactTextString(m) }
func (*FailureReportDuration) ProtoMessage()    {}
func (*FailureReportDuration) Descriptor() ([]byte, []int) {
	return fileDescriptor_159c218d0eccbf50, []int{3}
}
func (m *FailureReportDuration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FailureReportDuration.Unmarshal(m, b)
}
func (m *FailureReportDuration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FailureReportDuration.Marshal(b, m, deterministic)
}
func (m *FailureReportDuration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FailureReportDuration.Merge(m, src)
}
func (m *FailureReportDuration) XXX_Size() int {
	return xxx_messageInfo_FailureReportDuration.Size(m)
}
func (m *FailureReportDuration) XXX_DiscardUnknown() {
	xxx_messageInfo_FailureReportDuration.DiscardUnknown(m)
}

var xxx_messageInfo_FailureReportDuration proto.InternalMessageInfo

func (m *FailureReportDuration) GetIndication() FailureReportDuration_EIndicationLatchType {
	if m != nil {
		return m.Indication
	}
	return FailureReportDuration_NO_LATCH
}

func (m *FailureReportDuration) GetIndicationSeconds() uint32 {
	if m != nil {
		return m.IndicationSeconds
	}
	return 0
}

// Result of test, it is inspired by Time-Series event i.e.
//   <id>[<tag-key>=<tag-value>, ...][<field-key>=<field-value>, ...]<timestamp>
type TestResult struct {
	TestId               uint64                 `protobuf:"varint,1,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	Timestamp            *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TagSet               []*KeyValuePair        `protobuf:"bytes,3,rep,name=tag_set,json=tagSet,proto3" json:"tag_set,omitempty"`
	FieldSet             []*KeyValuePair        `protobuf:"bytes,4,rep,name=field_set,json=fieldSet,proto3" json:"field_set,omitempty"`
	ReportPriority       uint32                 `protobuf:"varint,5,opt,name=report_priority,json=reportPriority,proto3" json:"report_priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TestResult) ProtoReflect() protoreflect.Message {
	panic("implement me")
}

func (m *TestResult) Reset()         { *m = TestResult{} }
func (m *TestResult) String() string { return proto.CompactTextString(m) }
func (*TestResult) ProtoMessage()    {}
func (*TestResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_159c218d0eccbf50, []int{4}
}
func (m *TestResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResult.Unmarshal(m, b)
}
func (m *TestResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResult.Marshal(b, m, deterministic)
}
func (m *TestResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResult.Merge(m, src)
}
func (m *TestResult) XXX_Size() int {
	return xxx_messageInfo_TestResult.Size(m)
}
func (m *TestResult) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResult.DiscardUnknown(m)
}

var xxx_messageInfo_TestResult proto.InternalMessageInfo

func (m *TestResult) GetTestId() uint64 {
	if m != nil {
		return m.TestId
	}
	return 0
}

func (m *TestResult) GetTimestamp() *timestamppb.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *TestResult) GetTagSet() []*KeyValuePair {
	if m != nil {
		return m.TagSet
	}
	return nil
}

func (m *TestResult) GetFieldSet() []*KeyValuePair {
	if m != nil {
		return m.FieldSet
	}
	return nil
}

func (m *TestResult) GetReportPriority() uint32 {
	if m != nil {
		return m.ReportPriority
	}
	return 0
}

type PrimaryHeader struct {
	// consecutive message counter that is increased upon every transmission
	MessageCounter uint64 `protobuf:"varint,1,opt,name=messageCounter,proto3" json:"messageCounter,omitempty"`
	// when the status was determined
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// the version of the schema
	SchemaVersion string `protobuf:"bytes,3,opt,name=schemaVersion,proto3" json:"schemaVersion,omitempty"`
	// the identification of the sender, encoded with base64
	SenderHost           string   `protobuf:"bytes,4,opt,name=senderHost,proto3" json:"senderHost,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimaryHeader) Reset()         { *m = PrimaryHeader{} }
func (m *PrimaryHeader) String() string { return proto.CompactTextString(m) }
func (*PrimaryHeader) ProtoMessage()    {}
func (*PrimaryHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_159c218d0eccbf50, []int{5}
}
func (m *PrimaryHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimaryHeader.Unmarshal(m, b)
}
func (m *PrimaryHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimaryHeader.Marshal(b, m, deterministic)
}
func (m *PrimaryHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimaryHeader.Merge(m, src)
}
func (m *PrimaryHeader) XXX_Size() int {
	return xxx_messageInfo_PrimaryHeader.Size(m)
}
func (m *PrimaryHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimaryHeader.DiscardUnknown(m)
}

var xxx_messageInfo_PrimaryHeader proto.InternalMessageInfo

func (m *PrimaryHeader) GetMessageCounter() uint64 {
	if m != nil {
		return m.MessageCounter
	}
	return 0
}

func (m *PrimaryHeader) GetTimestamp() *timestamppb.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *PrimaryHeader) GetSchemaVersion() string {
	if m != nil {
		return m.SchemaVersion
	}
	return ""
}

func (m *PrimaryHeader) GetSenderHost() string {
	if m != nil {
		return m.SenderHost
	}
	return ""
}

//****************************************************************************
type TestResultsSet struct {
	// header
	Header *PrimaryHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// data
	ResultsSet           []*TestResult `protobuf:"bytes,2,rep,name=results_set,json=resultsSet,proto3" json:"results_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TestResultsSet) ProtoReflect() protoreflect.Message {
	panic("implement me")
}

func (m *TestResultsSet) Reset()         { *m = TestResultsSet{} }
func (m *TestResultsSet) String() string { return proto.CompactTextString(m) }
func (*TestResultsSet) ProtoMessage()    {}
func (*TestResultsSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_159c218d0eccbf50, []int{6}
}
func (m *TestResultsSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResultsSet.Unmarshal(m, b)
}
func (m *TestResultsSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResultsSet.Marshal(b, m, deterministic)
}
func (m *TestResultsSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResultsSet.Merge(m, src)
}
func (m *TestResultsSet) XXX_Size() int {
	return xxx_messageInfo_TestResultsSet.Size(m)
}
func (m *TestResultsSet) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResultsSet.DiscardUnknown(m)
}

var xxx_messageInfo_TestResultsSet proto.InternalMessageInfo

func (m *TestResultsSet) GetHeader() *PrimaryHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *TestResultsSet) GetResultsSet() []*TestResult {
	if m != nil {
		return m.ResultsSet
	}
	return nil
}

// This structure describes failure.
type Failure struct {
	Description          *FailureDescription          `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	ExaminationRule      *FailureExaminationRule      `protobuf:"bytes,2,opt,name=examination_rule,json=examinationRule,proto3" json:"examination_rule,omitempty"`
	ReportDuration       *FailureReportDuration       `protobuf:"bytes,3,opt,name=report_duration,json=reportDuration,proto3" json:"report_duration,omitempty"`
	Dependencies         *Failure_FailureDependencies `protobuf:"bytes,4,opt,name=dependencies,proto3" json:"dependencies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Failure) ProtoReflect() protoreflect.Message {
	panic("implement me")
}

func (m *Failure) Reset()         { *m = Failure{} }
func (m *Failure) String() string { return proto.CompactTextString(m) }
func (*Failure) ProtoMessage()    {}
func (*Failure) Descriptor() ([]byte, []int) {
	return fileDescriptor_159c218d0eccbf50, []int{7}
}
func (m *Failure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Failure.Unmarshal(m, b)
}
func (m *Failure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Failure.Marshal(b, m, deterministic)
}
func (m *Failure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Failure.Merge(m, src)
}
func (m *Failure) XXX_Size() int {
	return xxx_messageInfo_Failure.Size(m)
}
func (m *Failure) XXX_DiscardUnknown() {
	xxx_messageInfo_Failure.DiscardUnknown(m)
}

var xxx_messageInfo_Failure proto.InternalMessageInfo

func (m *Failure) GetDescription() *FailureDescription {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Failure) GetExaminationRule() *FailureExaminationRule {
	if m != nil {
		return m.ExaminationRule
	}
	return nil
}

func (m *Failure) GetReportDuration() *FailureReportDuration {
	if m != nil {
		return m.ReportDuration
	}
	return nil
}

func (m *Failure) GetDependencies() *Failure_FailureDependencies {
	if m != nil {
		return m.Dependencies
	}
	return nil
}

// ----- dependencies ------
type Failure_FailureDependencies struct {
	BelongsToGroup       []string `protobuf:"bytes,1,rep,name=belongs_to_group,json=belongsToGroup,proto3" json:"belongs_to_group,omitempty"`
	MasksOtherGroup      []string `protobuf:"bytes,2,rep,name=masks_other_group,json=masksOtherGroup,proto3" json:"masks_other_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Failure_FailureDependencies) Reset()         { *m = Failure_FailureDependencies{} }
func (m *Failure_FailureDependencies) String() string { return proto.CompactTextString(m) }
func (*Failure_FailureDependencies) ProtoMessage()    {}
func (*Failure_FailureDependencies) Descriptor() ([]byte, []int) {
	return fileDescriptor_159c218d0eccbf50, []int{7, 0}
}
func (m *Failure_FailureDependencies) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Failure_FailureDependencies.Unmarshal(m, b)
}
func (m *Failure_FailureDependencies) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Failure_FailureDependencies.Marshal(b, m, deterministic)
}
func (m *Failure_FailureDependencies) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Failure_FailureDependencies.Merge(m, src)
}
func (m *Failure_FailureDependencies) XXX_Size() int {
	return xxx_messageInfo_Failure_FailureDependencies.Size(m)
}
func (m *Failure_FailureDependencies) XXX_DiscardUnknown() {
	xxx_messageInfo_Failure_FailureDependencies.DiscardUnknown(m)
}

var xxx_messageInfo_Failure_FailureDependencies proto.InternalMessageInfo

func (m *Failure_FailureDependencies) GetBelongsToGroup() []string {
	if m != nil {
		return m.BelongsToGroup
	}
	return nil
}

func (m *Failure_FailureDependencies) GetMasksOtherGroup() []string {
	if m != nil {
		return m.MasksOtherGroup
	}
	return nil
}

// This structure configures all falures that should not be reported for defined user groups
type UserGroupsFiltering struct {
	GroupFilter          []*UserGroupsFiltering_FilteredFailures `protobuf:"bytes,1,rep,name=group_filter,json=groupFilter,proto3" json:"group_filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *UserGroupsFiltering) Reset()         { *m = UserGroupsFiltering{} }
func (m *UserGroupsFiltering) String() string { return proto.CompactTextString(m) }
func (*UserGroupsFiltering) ProtoMessage()    {}
func (*UserGroupsFiltering) Descriptor() ([]byte, []int) {
	return fileDescriptor_159c218d0eccbf50, []int{8}
}
func (m *UserGroupsFiltering) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserGroupsFiltering.Unmarshal(m, b)
}
func (m *UserGroupsFiltering) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserGroupsFiltering.Marshal(b, m, deterministic)
}
func (m *UserGroupsFiltering) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserGroupsFiltering.Merge(m, src)
}
func (m *UserGroupsFiltering) XXX_Size() int {
	return xxx_messageInfo_UserGroupsFiltering.Size(m)
}
func (m *UserGroupsFiltering) XXX_DiscardUnknown() {
	xxx_messageInfo_UserGroupsFiltering.DiscardUnknown(m)
}

var xxx_messageInfo_UserGroupsFiltering proto.InternalMessageInfo

func (m *UserGroupsFiltering) GetGroupFilter() []*UserGroupsFiltering_FilteredFailures {
	if m != nil {
		return m.GroupFilter
	}
	return nil
}

type UserGroupsFiltering_FilteredFailures struct {
	UserGroup            string   `protobuf:"bytes,1,opt,name=user_group,json=userGroup,proto3" json:"user_group,omitempty"`
	MaskedTestIds        []uint64 `protobuf:"varint,2,rep,packed,name=masked_test_ids,json=maskedTestIds,proto3" json:"masked_test_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserGroupsFiltering_FilteredFailures) ProtoReflect() protoreflect.Message {
	panic("implement me")
}

func (m *UserGroupsFiltering_FilteredFailures) Reset()         { *m = UserGroupsFiltering_FilteredFailures{} }
func (m *UserGroupsFiltering_FilteredFailures) String() string { return proto.CompactTextString(m) }
func (*UserGroupsFiltering_FilteredFailures) ProtoMessage()    {}
func (*UserGroupsFiltering_FilteredFailures) Descriptor() ([]byte, []int) {
	return fileDescriptor_159c218d0eccbf50, []int{8, 0}
}
func (m *UserGroupsFiltering_FilteredFailures) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserGroupsFiltering_FilteredFailures.Unmarshal(m, b)
}
func (m *UserGroupsFiltering_FilteredFailures) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserGroupsFiltering_FilteredFailures.Marshal(b, m, deterministic)
}
func (m *UserGroupsFiltering_FilteredFailures) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserGroupsFiltering_FilteredFailures.Merge(m, src)
}
func (m *UserGroupsFiltering_FilteredFailures) XXX_Size() int {
	return xxx_messageInfo_UserGroupsFiltering_FilteredFailures.Size(m)
}
func (m *UserGroupsFiltering_FilteredFailures) XXX_DiscardUnknown() {
	xxx_messageInfo_UserGroupsFiltering_FilteredFailures.DiscardUnknown(m)
}

var xxx_messageInfo_UserGroupsFiltering_FilteredFailures proto.InternalMessageInfo

func (m *UserGroupsFiltering_FilteredFailures) GetUserGroup() string {
	if m != nil {
		return m.UserGroup
	}
	return ""
}

func (m *UserGroupsFiltering_FilteredFailures) GetMaskedTestIds() []uint64 {
	if m != nil {
		return m.MaskedTestIds
	}
	return nil
}

// This structure contains data that is reported as BIT Status
type BitStatus struct {
	UserGroup            string                      `protobuf:"bytes,1,opt,name=user_group,json=userGroup,proto3" json:"user_group,omitempty"`
	Failures             []*BitStatus_RportedFailure `protobuf:"bytes,2,rep,name=failures,proto3" json:"failures,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *BitStatus) ProtoReflect() protoreflect.Message {
	panic("implement me")
}

func (m *BitStatus) Reset()         { *m = BitStatus{} }
func (m *BitStatus) String() string { return proto.CompactTextString(m) }
func (*BitStatus) ProtoMessage()    {}
func (*BitStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_159c218d0eccbf50, []int{9}
}
func (m *BitStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BitStatus.Unmarshal(m, b)
}
func (m *BitStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BitStatus.Marshal(b, m, deterministic)
}
func (m *BitStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BitStatus.Merge(m, src)
}
func (m *BitStatus) XXX_Size() int {
	return xxx_messageInfo_BitStatus.Size(m)
}
func (m *BitStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_BitStatus.DiscardUnknown(m)
}

var xxx_messageInfo_BitStatus proto.InternalMessageInfo

func (m *BitStatus) GetUserGroup() string {
	if m != nil {
		return m.UserGroup
	}
	return ""
}

func (m *BitStatus) GetFailures() []*BitStatus_RportedFailure {
	if m != nil {
		return m.Failures
	}
	return nil
}

type BitStatus_RportedFailure struct {
	FailureData          *FailureDescription    `protobuf:"bytes,1,opt,name=failure_data,json=failureData,proto3" json:"failure_data,omitempty"`
	Timestamp            *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Count                uint64                 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *BitStatus_RportedFailure) Reset()         { *m = BitStatus_RportedFailure{} }
func (m *BitStatus_RportedFailure) String() string { return proto.CompactTextString(m) }
func (*BitStatus_RportedFailure) ProtoMessage()    {}
func (*BitStatus_RportedFailure) Descriptor() ([]byte, []int) {
	return fileDescriptor_159c218d0eccbf50, []int{9, 0}
}
func (m *BitStatus_RportedFailure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BitStatus_RportedFailure.Unmarshal(m, b)
}
func (m *BitStatus_RportedFailure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BitStatus_RportedFailure.Marshal(b, m, deterministic)
}
func (m *BitStatus_RportedFailure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BitStatus_RportedFailure.Merge(m, src)
}
func (m *BitStatus_RportedFailure) XXX_Size() int {
	return xxx_messageInfo_BitStatus_RportedFailure.Size(m)
}
func (m *BitStatus_RportedFailure) XXX_DiscardUnknown() {
	xxx_messageInfo_BitStatus_RportedFailure.DiscardUnknown(m)
}

var xxx_messageInfo_BitStatus_RportedFailure proto.InternalMessageInfo

func (m *BitStatus_RportedFailure) GetFailureData() *FailureDescription {
	if m != nil {
		return m.FailureData
	}
	return nil
}

func (m *BitStatus_RportedFailure) GetTimestamp() *timestamppb.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *BitStatus_RportedFailure) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterEnum("bit.ESeverity", ESeverity_name, ESeverity_value)
	proto.RegisterEnum("bit.FailureExaminationRule_FailureCriteria_FailureValueCriteria_EThresholdMode", FailureExaminationRule_FailureCriteria_FailureValueCriteria_EThresholdMode_name, FailureExaminationRule_FailureCriteria_FailureValueCriteria_EThresholdMode_value)
	proto.RegisterEnum("bit.FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding_EExceedingType", FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding_EExceedingType_name, FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding_EExceedingType_value)
	proto.RegisterEnum("bit.FailureExaminationRule_FailureCriteria_FailureTimeCriteria_EWindowType", FailureExaminationRule_FailureCriteria_FailureTimeCriteria_EWindowType_name, FailureExaminationRule_FailureCriteria_FailureTimeCriteria_EWindowType_value)
	proto.RegisterEnum("bit.FailureReportDuration_EIndicationLatchType", FailureReportDuration_EIndicationLatchType_name, FailureReportDuration_EIndicationLatchType_value)
	proto.RegisterType((*KeyValuePair)(nil), "bit.KeyValuePair")
	proto.RegisterType((*FailureDescription)(nil), "bit.FailureDescription")
	proto.RegisterType((*FailureExaminationRule)(nil), "bit.FailureExaminationRule")
	proto.RegisterType((*FailureExaminationRule_FailureCriteria)(nil), "bit.FailureExaminationRule.FailureCriteria")
	proto.RegisterType((*FailureExaminationRule_FailureCriteria_FailureValueCriteria)(nil), "bit.FailureExaminationRule.FailureCriteria.FailureValueCriteria")
	proto.RegisterType((*FailureExaminationRule_FailureCriteria_FailureValueCriteria_Exceeding)(nil), "bit.FailureExaminationRule.FailureCriteria.FailureValueCriteria.Exceeding")
	proto.RegisterType((*FailureExaminationRule_FailureCriteria_FailureTimeCriteria)(nil), "bit.FailureExaminationRule.FailureCriteria.FailureTimeCriteria")
	proto.RegisterType((*FailureReportDuration)(nil), "bit.FailureReportDuration")
	proto.RegisterType((*TestResult)(nil), "bit.TestResult")
	proto.RegisterType((*PrimaryHeader)(nil), "bit.PrimaryHeader")
	proto.RegisterType((*TestResultsSet)(nil), "bit.TestResultsSet")
	proto.RegisterType((*Failure)(nil), "bit.Failure")
	proto.RegisterType((*Failure_FailureDependencies)(nil), "bit.Failure.FailureDependencies")
	proto.RegisterType((*UserGroupsFiltering)(nil), "bit.UserGroupsFiltering")
	proto.RegisterType((*UserGroupsFiltering_FilteredFailures)(nil), "bit.UserGroupsFiltering.FilteredFailures")
	proto.RegisterType((*BitStatus)(nil), "bit.BitStatus")
	proto.RegisterType((*BitStatus_RportedFailure)(nil), "bit.BitStatus.RportedFailure")
}

func init() { proto.RegisterFile("bit.proto", fileDescriptor_159c218d0eccbf50) }

var fileDescriptor_159c218d0eccbf50 = []byte{
	// 1481 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xcd, 0x6e, 0x1b, 0x47,
	0x12, 0xd6, 0x90, 0x94, 0x28, 0x16, 0xff, 0x46, 0x2d, 0xd9, 0xe6, 0xd2, 0xf0, 0x5a, 0x20, 0x76,
	0x6d, 0x59, 0x8b, 0xa5, 0x0c, 0xad, 0xb1, 0x58, 0xef, 0x61, 0x37, 0x12, 0x39, 0xb4, 0x18, 0xcb,
	0xa4, 0xd0, 0x1c, 0x49, 0x70, 0x2e, 0x83, 0x26, 0xa7, 0x49, 0x35, 0x3c, 0x3f, 0xc4, 0x74, 0x8f,
	0x6c, 0xf9, 0xec, 0x27, 0xc8, 0x39, 0xe7, 0x1c, 0xf2, 0x02, 0x01, 0x72, 0x08, 0xf2, 0x30, 0x79,
	0x80, 0x1c, 0x03, 0xe4, 0x12, 0x74, 0xcf, 0x1f, 0x29, 0xc8, 0x31, 0x12, 0xe5, 0xd6, 0xf5, 0xd5,
	0x57, 0x55, 0x5d, 0xd5, 0xdd, 0x55, 0x0d, 0xa5, 0x31, 0x13, 0xed, 0x79, 0xe0, 0x0b, 0x1f, 0xe5,
	0xc7, 0x4c, 0x34, 0x1f, 0xce, 0x7c, 0x7f, 0xe6, 0xd0, 0x3d, 0x05, 0x8d, 0xc3, 0xe9, 0x9e, 0x60,
	0x2e, 0xe5, 0x82, 0xb8, 0xf3, 0x88, 0xd5, 0xfa, 0x37, 0x54, 0x5e, 0xd2, 0xab, 0x33, 0xe2, 0x84,
	0xf4, 0x84, 0xb0, 0x00, 0xe9, 0x90, 0x7f, 0x43, 0xaf, 0x1a, 0xda, 0xb6, 0xb6, 0x53, 0xc1, 0x72,
	0x89, 0xb6, 0x60, 0xf5, 0x52, 0xaa, 0x1b, 0x39, 0x85, 0x45, 0x42, 0xeb, 0xeb, 0x3c, 0xa0, 0x1e,
	0x61, 0x4e, 0x18, 0xd0, 0x2e, 0xe5, 0x93, 0x80, 0xcd, 0x05, 0xf3, 0x3d, 0x74, 0x1f, 0x4a, 0xa1,
	0xc7, 0x84, 0xe5, 0x11, 0x97, 0x2a, 0x27, 0x25, 0xbc, 0x2e, 0x81, 0x01, 0x71, 0xa9, 0x54, 0x0a,
	0xca, 0x63, 0x65, 0x2e, 0x52, 0x4a, 0x40, 0x29, 0xef, 0x41, 0x51, 0x29, 0x99, 0xdd, 0xc8, 0x6f,
	0x6b, 0x3b, 0x05, 0xbc, 0x26, 0xc5, 0xbe, 0x8d, 0xfe, 0x02, 0xeb, 0x63, 0x26, 0x2c, 0x71, 0x35,
	0xa7, 0x8d, 0xc2, 0x76, 0x7e, 0xa7, 0x84, 0x8b, 0x63, 0x26, 0xcc, 0xab, 0x39, 0x45, 0xdb, 0x50,
	0xb6, 0xb3, 0xe0, 0x8d, 0x55, 0xe5, 0x72, 0x11, 0x42, 0x8f, 0xa1, 0x4e, 0x6c, 0x9b, 0xc9, 0x35,
	0x71, 0x2c, 0xe6, 0x4d, 0xfd, 0xc6, 0x9a, 0x62, 0xd5, 0x32, 0xb8, 0xef, 0x4d, 0x7d, 0xd4, 0x80,
	0xe2, 0x3c, 0x0c, 0xe6, 0x3e, 0xa7, 0x8d, 0xa2, 0x22, 0x24, 0x22, 0xda, 0x85, 0x75, 0x4e, 0x2f,
	0x69, 0xc0, 0xc4, 0x55, 0x63, 0x7d, 0x5b, 0xdb, 0xa9, 0xed, 0xd7, 0xda, 0xb2, 0xca, 0xc6, 0x28,
	0x46, 0x71, 0xaa, 0x47, 0x4f, 0x40, 0xf7, 0xe7, 0x34, 0x20, 0xc2, 0x0f, 0xac, 0x69, 0x54, 0x9d,
	0x06, 0xa8, 0x3d, 0xd7, 0x13, 0x3c, 0x2e, 0x1a, 0x7a, 0x0a, 0x5b, 0x0e, 0xf3, 0xa8, 0x15, 0xd0,
	0xb9, 0x43, 0x26, 0xd4, 0x13, 0x96, 0xac, 0x13, 0x6f, 0x94, 0x15, 0x1d, 0x49, 0x1d, 0x4e, 0x54,
	0xa7, 0x52, 0x83, 0x9e, 0xc1, 0xdd, 0x29, 0xa3, 0x8e, 0x9d, 0x98, 0xb8, 0xa9, 0x4d, 0x45, 0xd9,
	0x6c, 0x29, 0x2d, 0x4e, 0x95, 0xca, 0xaa, 0xf5, 0x43, 0x09, 0xee, 0xc6, 0x31, 0x8d, 0x77, 0xc4,
	0x65, 0x1e, 0x91, 0x59, 0xe3, 0xd0, 0xa1, 0xe8, 0xef, 0x50, 0x73, 0x89, 0x98, 0x5c, 0x30, 0x6f,
	0x66, 0x29, 0xdb, 0xf8, 0xc4, 0xaa, 0x09, 0xda, 0x93, 0x20, 0x7a, 0x06, 0x95, 0x94, 0x26, 0xc8,
	0x4c, 0x9d, 0x5c, 0x79, 0x7f, 0x43, 0x15, 0x61, 0xf1, 0xee, 0xe0, 0x72, 0x42, 0x33, 0xc9, 0x0c,
	0x9d, 0x81, 0x1e, 0x57, 0xc0, 0x9a, 0x04, 0x4c, 0xd0, 0x80, 0x11, 0x75, 0xb0, 0xe5, 0xfd, 0x7f,
	0x28, 0xcb, 0x9b, 0xf7, 0x94, 0xc0, 0x9d, 0xd8, 0x04, 0xd7, 0xa7, 0xcb, 0x40, 0xf3, 0xa7, 0x22,
	0xd4, 0xaf, 0x91, 0xd0, 0x0c, 0x6a, 0xea, 0x56, 0x66, 0x91, 0x34, 0x15, 0xe9, 0xb3, 0xdf, 0x11,
	0x29, 0x91, 0x55, 0x3a, 0x69, 0xf8, 0xea, 0xe5, 0xa2, 0x88, 0x6c, 0xa8, 0xca, 0x07, 0x94, 0xc5,
	0x89, 0x6a, 0xf1, 0xff, 0x3f, 0x10, 0xc7, 0x64, 0x6e, 0x16, 0xa6, 0x22, 0x16, 0xa4, 0xe6, 0x97,
	0x05, 0xd8, 0xba, 0x69, 0x37, 0xf2, 0x92, 0xba, 0xcc, 0x63, 0x6e, 0xe8, 0xaa, 0x04, 0x35, 0x9c,
	0x88, 0x91, 0xe6, 0x9d, 0xd2, 0xe4, 0x12, 0x8d, 0x12, 0xd1, 0x25, 0xd4, 0xc4, 0x45, 0x40, 0xf9,
	0x85, 0xef, 0xd8, 0x96, 0xeb, 0xdb, 0x54, 0x9d, 0x42, 0x6d, 0x7f, 0x78, 0xdb, 0xda, 0xb4, 0x0d,
	0x33, 0xf1, 0xfb, 0xca, 0xb7, 0x29, 0xae, 0x8a, 0x45, 0x11, 0x5d, 0x40, 0x89, 0xbe, 0x9b, 0x50,
	0x6a, 0x33, 0x6f, 0xd6, 0x28, 0xa8, 0x32, 0x7d, 0x7e, 0xfb, 0x90, 0x89, 0x47, 0x9c, 0x39, 0x6f,
	0x7e, 0xa7, 0x41, 0x29, 0x55, 0x20, 0x17, 0x0a, 0xaa, 0x55, 0x68, 0x2a, 0xcb, 0xd7, 0x7f, 0x5e,
	0xc8, 0xb6, 0x91, 0x2e, 0x65, 0xf3, 0xc1, 0x2a, 0xcc, 0x72, 0x77, 0xd4, 0x92, 0xee, 0xb8, 0x03,
	0xb5, 0x65, 0x36, 0x2a, 0xc1, 0xea, 0xd9, 0xc1, 0xf1, 0xa9, 0xa1, 0xaf, 0xa0, 0x32, 0x14, 0x4f,
	0x0c, 0xdc, 0x31, 0x06, 0xa6, 0xae, 0xb5, 0x1e, 0x43, 0x6d, 0xb9, 0x8e, 0x08, 0x60, 0xed, 0xbc,
	0x6f, 0x1e, 0xf5, 0x07, 0xfa, 0x8a, 0xb4, 0x1a, 0x9e, 0x9a, 0xc3, 0x9e, 0xae, 0x35, 0x7f, 0xd6,
	0x60, 0xf3, 0x86, 0xab, 0x83, 0x1c, 0x28, 0xbf, 0x65, 0x9e, 0xed, 0xbf, 0xb5, 0x16, 0xd2, 0x7e,
	0x79, 0xcb, 0x0b, 0xd9, 0x36, 0xce, 0x95, 0x4f, 0x95, 0x28, 0xbc, 0x4d, 0xd7, 0xe8, 0x61, 0x1a,
	0x8d, 0xb3, 0xf7, 0x51, 0xd2, 0xd5, 0x84, 0x30, 0x62, 0xef, 0xa9, 0x6c, 0xb8, 0xf1, 0x8b, 0xe5,
	0xd6, 0xa4, 0xe3, 0x87, 0x9e, 0x50, 0xf7, 0xad, 0x8a, 0x6b, 0x09, 0xdc, 0x51, 0x68, 0xeb, 0x09,
	0x94, 0x17, 0x82, 0xa0, 0x2a, 0x94, 0x06, 0x43, 0xeb, 0xbc, 0x3f, 0xe8, 0x0e, 0xcf, 0xa3, 0x1a,
	0x8d, 0x8e, 0xfb, 0xdd, 0xfe, 0xe0, 0x85, 0xae, 0xb5, 0x7e, 0xd1, 0xe0, 0x4e, 0xbc, 0x49, 0x4c,
	0xe7, 0x7e, 0x20, 0xba, 0x61, 0xa0, 0xd2, 0x41, 0x43, 0x00, 0xe6, 0xd9, 0x6c, 0xa2, 0xa4, 0x38,
	0xf7, 0xbd, 0xc5, 0xdc, 0x97, 0xf9, 0x6d, 0xa3, 0x9f, 0xb2, 0x8f, 0x65, 0xaf, 0x8a, 0xf2, 0xcb,
	0x5c, 0xa0, 0x7f, 0x02, 0xca, 0x24, 0x8b, 0xd3, 0x89, 0xef, 0xd9, 0x3c, 0x4e, 0x73, 0x23, 0xd3,
	0x8c, 0x22, 0x45, 0x6b, 0x0c, 0x5b, 0x37, 0xb9, 0x44, 0x15, 0x58, 0x1f, 0x0c, 0xad, 0xe3, 0x03,
	0xb3, 0x73, 0xa4, 0xaf, 0xa0, 0x3b, 0xb0, 0xa1, 0x96, 0xd6, 0xe9, 0xc0, 0xec, 0x1f, 0x5b, 0xd8,
	0x18, 0x19, 0xa6, 0xae, 0xa1, 0x0d, 0xa8, 0x46, 0x70, 0x6f, 0x88, 0x8d, 0x33, 0x03, 0xeb, 0x39,
	0x84, 0xa0, 0x36, 0x38, 0x7d, 0x65, 0x0d, 0x7b, 0xd6, 0xc8, 0xe8, 0x0c, 0x07, 0xdd, 0x91, 0x9e,
	0x6f, 0xfd, 0xa8, 0x01, 0x98, 0x94, 0x0b, 0x4c, 0x79, 0xe8, 0x88, 0xc5, 0x39, 0xa9, 0x2d, 0xcd,
	0xc9, 0xff, 0x40, 0x29, 0x1d, 0xee, 0x71, 0x5f, 0x6a, 0xb6, 0xa3, 0xf1, 0xdf, 0x4e, 0xc6, 0x7f,
	0xdb, 0x4c, 0x18, 0x38, 0x23, 0xa3, 0x5d, 0x28, 0x0a, 0x32, 0xb3, 0x38, 0x95, 0x67, 0x95, 0xbf,
	0xb9, 0xb7, 0xaf, 0x09, 0x32, 0x1b, 0x51, 0x81, 0xda, 0x50, 0x8a, 0x86, 0x90, 0x64, 0x17, 0x3e,
	0xc6, 0x5e, 0x57, 0x1c, 0xc9, 0x7f, 0x0c, 0xf5, 0x40, 0x9d, 0x81, 0x35, 0x0f, 0x98, 0xaf, 0x86,
	0xe8, 0x6a, 0x74, 0x1f, 0x22, 0xf8, 0x24, 0x46, 0x5b, 0xdf, 0x6a, 0x50, 0x3d, 0x09, 0x98, 0x4b,
	0x82, 0xab, 0x23, 0x4a, 0x6c, 0x1a, 0xa0, 0x47, 0x50, 0x73, 0x29, 0xe7, 0x64, 0x46, 0xd5, 0x8d,
	0xa1, 0x41, 0x9c, 0xf0, 0x35, 0xf4, 0x16, 0x89, 0xff, 0x0d, 0xaa, 0x7c, 0x72, 0x41, 0x5d, 0x72,
	0x46, 0x03, 0x2e, 0x6f, 0x50, 0x3e, 0x9a, 0x7f, 0x4b, 0x20, 0xfa, 0x2b, 0x00, 0xa7, 0x9e, 0x4d,
	0x83, 0x23, 0x9f, 0x0b, 0xd5, 0xca, 0x4a, 0x78, 0x01, 0x69, 0x79, 0x50, 0xcb, 0xce, 0x87, 0xcb,
	0xa4, 0x77, 0x61, 0xed, 0x42, 0xe5, 0x10, 0xcf, 0x21, 0xa4, 0x2a, 0xb4, 0x94, 0x1d, 0x8e, 0x19,
	0xe8, 0x29, 0x94, 0x83, 0xc8, 0x52, 0x95, 0x34, 0xa7, 0x4a, 0x5a, 0x57, 0x06, 0x99, 0x57, 0x0c,
	0x41, 0xea, 0xbd, 0xf5, 0x21, 0x0f, 0xc5, 0xe4, 0x17, 0xf1, 0x7c, 0xf9, 0x07, 0x14, 0x85, 0xbb,
	0xb7, 0xf8, 0x02, 0x16, 0x7e, 0x67, 0xcb, 0x5f, 0xa3, 0x1e, 0xe8, 0x34, 0xeb, 0x0c, 0x56, 0x10,
	0x3a, 0x34, 0xae, 0xde, 0xfd, 0xdf, 0xe8, 0x1e, 0xb8, 0x4e, 0xaf, 0xfd, 0x22, 0x3a, 0xe9, 0x09,
	0xdb, 0xf1, 0x33, 0x8b, 0xe7, 0x7c, 0xf3, 0xe3, 0x0f, 0x31, 0x39, 0xfd, 0xf4, 0x21, 0x77, 0xa1,
	0x62, 0xd3, 0xb9, 0xac, 0xa9, 0x37, 0x61, 0x94, 0xc7, 0x03, 0x63, 0x7b, 0xd1, 0x43, 0x96, 0x50,
	0xc6, 0xc3, 0x4b, 0x56, 0xcd, 0x37, 0x69, 0x8b, 0x5c, 0x24, 0xa1, 0x1d, 0xd0, 0xc7, 0xd4, 0xf1,
	0xbd, 0x19, 0xb7, 0x84, 0x6f, 0xcd, 0x02, 0x3f, 0x9c, 0x37, 0x34, 0xf5, 0x65, 0xaa, 0xc5, 0xb8,
	0xe9, 0xbf, 0x90, 0x28, 0xda, 0x85, 0x0d, 0x97, 0xf0, 0x37, 0xdc, 0xf2, 0xc5, 0x05, 0x0d, 0x62,
	0x6a, 0x2e, 0xfa, 0xc0, 0x29, 0xc5, 0x50, 0xe2, 0x8a, 0xdb, 0xfa, 0x5e, 0x83, 0xcd, 0x53, 0x1e,
	0x4b, 0xbc, 0xc7, 0x1c, 0xd9, 0x39, 0xbd, 0x19, 0x3a, 0x86, 0x8a, 0xb2, 0xb3, 0xa6, 0x0a, 0x52,
	0x91, 0xca, 0xfb, 0x4f, 0x54, 0x2a, 0x37, 0xf0, 0xdb, 0xd1, 0x8a, 0xda, 0xf1, 0xce, 0x39, 0x2e,
	0x2b, 0xf3, 0x08, 0x6e, 0xbe, 0x06, 0xfd, 0x3a, 0x01, 0x3d, 0x00, 0x08, 0x79, 0xba, 0xbd, 0xe8,
	0xcf, 0x56, 0x0a, 0x13, 0xd7, 0xe8, 0x11, 0xa8, 0xbd, 0x52, 0xdb, 0x8a, 0x1b, 0x05, 0x57, 0x29,
	0x14, 0xe4, 0xbf, 0x4e, 0xc2, 0xa6, 0xea, 0x17, 0xbc, 0xf5, 0x21, 0x07, 0xa5, 0x43, 0x26, 0x46,
	0x82, 0x88, 0xf0, 0x93, 0x4e, 0x9f, 0xc3, 0x7a, 0xd2, 0xc0, 0xe3, 0x3b, 0xfa, 0x40, 0x65, 0x94,
	0x3a, 0x68, 0x63, 0x79, 0xa0, 0xe9, 0x2e, 0x71, 0x4a, 0x6f, 0x7e, 0xa5, 0x41, 0x6d, 0x59, 0x89,
	0xfe, 0x0b, 0x95, 0xe4, 0x73, 0x68, 0x13, 0x41, 0x3e, 0x79, 0x6f, 0x63, 0x72, 0x97, 0x08, 0x72,
	0x8b, 0xe7, 0xbe, 0x05, 0xab, 0x93, 0x74, 0x22, 0x15, 0x70, 0x24, 0xec, 0xfe, 0x0f, 0x4a, 0xe9,
	0x57, 0x5e, 0x0e, 0xdc, 0x57, 0xfd, 0xc1, 0x10, 0xeb, 0x2b, 0xb2, 0x87, 0x77, 0x8d, 0x17, 0xf8,
	0xa0, 0x6b, 0x74, 0x75, 0x4d, 0x4a, 0x1d, 0xdc, 0x37, 0xfb, 0x9d, 0x83, 0x63, 0x3d, 0x27, 0x67,
	0xf4, 0xe8, 0xa0, 0x67, 0x98, 0xaf, 0xf5, 0xfc, 0xa1, 0x01, 0x9b, 0x13, 0xdf, 0x6d, 0x07, 0x64,
	0x4a, 0xa8, 0xd3, 0x1e, 0x33, 0x8f, 0xc8, 0x34, 0x0e, 0xf3, 0x87, 0x4c, 0x1c, 0x69, 0x27, 0xda,
	0x17, 0x9b, 0xb1, 0x66, 0xe2, 0xbb, 0x7b, 0x52, 0xbb, 0x37, 0x66, 0xe2, 0x9b, 0x5c, 0x1d, 0x47,
	0xe8, 0xa1, 0xe4, 0x1f, 0x32, 0x31, 0x5e, 0x53, 0x7b, 0xff, 0xd7, 0xaf, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xc8, 0x5a, 0x88, 0x00, 0xc2, 0x0d, 0x00, 0x00,
}
